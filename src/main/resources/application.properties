# H2 Database Configuration - OPTIMIZED FOR 400K PRODUCTS
# Switch to persistent mode for better performance with large datasets
spring.datasource.url=jdbc:h2:file:./data/productdb;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# Connection Pool Configuration for Large Dataset
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# H2 Console (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration - OPTIMIZED FOR 400K PRODUCTS
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
# Disable SQL logging for performance with large dataset
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Performance optimizations for large dataset
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Enable second-level cache for better read performance
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
# Removed JCache configuration to avoid dependency issues
# spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory

# CSV data import is handled by CsvImportService
# SQL initialization disabled since we're importing from CSV
spring.sql.init.mode=never

# Logging configuration for production
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
